{"version":3,"sources":["components/Loading.js","shared/baseUrl.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","redux/ActionCreater.js","redux/ActionType.js","components/MainComponent.js","redux/Dishes.js","redux/Leaders.js","redux/Promotions.js","redux/Comments.js","redux/form.js","redux/Login.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","BaseUrl","RenderMenuItem","dish","Card","key","id","to","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","dishes","map","isLoading","errMsg","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","test","validEmail","Contact","handleSubmit","bind","console","log","values","postfeedback","JSON","stringify","this","resetFeedbackForm","href","title","height","frameborder","style","border","allowfullscreen","aria-hidden","tabindex","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","validateOn","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","LoginForm","useState","username","setusername","password","setpassword","Modal","isOpen","modal","toggle","toggleModal","ModalHeader","ModalBody","FormGroup","Input","onChange","e","target","value","onClick","handleLogin","login","RegisterForm","available","x","handleRegister","register","availableUName","LoginButton","NavItem","logout","handleLogout","Header","toggleNav","state","nav","setState","isNavOpen","Navbar","dark","expand","NavbarToggler","NavbarBrand","Collapse","navbar","Nav","loginState","Jumbotron","Footer","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishErrMess","promotion","promoLoading","errMess","promoErrMess","leader","leaderLoading","leaderMsg","CommentForm","postComment","dishId","isCmtFormOpen","updateCmtFormOpen","toggleCmtFormOpen","outline","postComments","rating","author","comments","handleCmtForm","RenderComment","cmts","commentDelete","commentEdit","comment","Rating","i","push","class","CmtsOptions","editCmts","seteditCmts","_id","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","date","Dish","dishLoading","disherrMsg","top","RenderLeader","Media","object","body","heading","right","About","leaders","CardHeader","list","refreshDish","payload","addComment","promosLoading","addPromos","promos","loginsuccess","loginfailed","usernameAvailable","ava","Main","fetchDishes","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","params","disherrMess","parseInt","commentsErrMess","fetchComments","withRouter","connect","dispatch","addComments","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","actions","reset","err","newComment","toISOString","method","headers","credentials","alert","postFeedback","cookie","remove","save","success","user","commentId","Dishes","action","Leaders","Promotions","Comments","concat","feedback","email","telnum","agree","contactType","Login","load","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2cde363.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Loading=()=>{\n    return(\n        <div className='container'>\n            <div className='row'>\n                <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\n                <h3>Loading . . .</h3>\n            </div>\n        </div>\n    )\n}","export const BaseUrl='http://localhost:3001/'","import React from 'react'\nimport {Card,CardTitle,CardImg,CardImgOverlay,Breadcrumb,BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom'\nimport { Loading } from './Loading';\nimport {BaseUrl} from '../shared/baseUrl'\nfunction RenderMenuItem({dish}){\n    // alert(dish.image)\n    return (\n        <Card key={dish.id} >\n            <Link to={`/bluegrassrestaurant/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={BaseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>                            \n                    <CardTitle >{dish.name}</CardTitle>                         \n                </CardImgOverlay>\n            </Link>\n        </Card>\n    )\n}\nfunction Menu(props){\n    const dishes=props.dishes.dishes.map((dish)=>{\n        return(\n            //mt-5 =>top margin:5 reactstrap\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        )\n    })\n    if(props.dishes.isLoading)\n        return(\n            <Loading/>\n        // <h1>{props.isLoading}</h1>\n        )\n    else if(props.dishes.errMsg)\n        return(\n            <h4>{props.dishes.errMsg}</h4>\n        )\n    else\n        return(\n            <div className='container'>\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to='/bluegrassrestaurant/home'>Home</Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                <div className='col-12'>\n                    <h3>Menu</h3>\n                    <hr/>\n                </div>\n                <div className='row'>\n                    {dishes}\n                </div>\n            </div>\n        );\n}\nexport default Menu;","import React, { Component } from 'react';\nimport {Breadcrumb,BreadcrumbItem,  Label, Col,  Button, Row} from 'reactstrap'\nimport {Form,Control,Errors} from 'react-redux-form'\nimport {Link} from 'react-router-dom'\n\nconst required = (val) => val && val.length;\nconst maxLength=(len)=>(val)=>(val) && (val.length<=len);\nconst minLength=(len)=>(val)=>(val) && (val.length>=len);\nconst isNumber=(val)=>/^(\\d{10})$/.test(val)\nconst validEmail=(val)=> /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nclass Contact extends Component {\n    constructor(props){\n        super(props)\n        this.handleSubmit=this.handleSubmit.bind(this)\n        console.log(props)\n    }\n    handleSubmit(values,postfeedback){\n        console.log(JSON.stringify(values))\n        // alert(JSON.stringify(values))\n        // console.log(postfeedback)\n        postfeedback(values)\n        this.props.resetFeedbackForm()\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to='/home'>Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>  \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-6 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            old jhajjar road,charkhi dadri\n                            <br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:bluegrass@food.net\">bluegrass@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-6 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                        <iframe title='address' src=\"https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d3503.1917987371367!2d76.27921121476535!3d28.594022382433053!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sin!4v1592407176803!5m2!1sen!2sin\" width=\"600\" height=\"450\" frameborder=\"0\" style={{border:0}} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" href='a' className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                       <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model='feedback' onSubmit={(values)=>this.handleSubmit(values,this.props.postfeedback)}>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\" className='form-control'\n                                        validators={{\n                                            required,\n                                            maxLength:maxLength(10),minLength:minLength(4)}}\n                                        validateOn='blur'\n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstname'\n                                        show='touched'\n                                        messages={{\n                                            required:'Required',\n                                            minLength:'First name should be 3 character long',\n                                            maxLength:'First name should be upto 10 characters'\n                                        }}\n                                    />\n                                </Col>                            \n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\" className='form-control'                                        \n                                    />                        \n                                </Col>                        \n                            </Row>\n                            <Row className='form-group'>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\" className='form-control'\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            isNumber: 'Must be a valid number'\n                                        }}\n                                     />    \n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\" className='form-control'\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className='form-check'>\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\" className='form-check-input'\n                                                />\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                    className='form-control'\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"message\" name=\"feedback\"\n                                        rows=\"12\" className='form-control'/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","import React,{Component, Fragment, useState} from 'react'\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalBody, ModalHeader, Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { LocalForm, Control, Errors} from 'react-redux-form';\n\n\nconst required=(val)=> val && val.length\nconst available=(x)=>(val)=>!x\nconst LoginForm=(props)=>{\n    const [username, setusername] = useState('')\n    const [password, setpassword] = useState('')\n    return(\n        <Modal isOpen={props.modal['login']} toggle={()=>props.toggleModal('login')}>\n                    <ModalHeader>Login</ModalHeader>\n                    <ModalBody>\n                        <LocalForm>\n                            <FormGroup>\n                                <Label htmlFor='username'>User Name:</Label>\n                                <Input type='text' name='username' id='username' onChange={(e)=>setusername(e.target.value)} required/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor='password'>Password:</Label>\n                                <Input type='password' name='password' id='password' onChange={(e)=>setpassword(e.target.value)} required/>\n                            </FormGroup>\n                            {/* <FormGroup check>\n                                \n                                <Label check>\n                                    <Input type=\"checkbox\" name='remember'\n                                    innerRef={(input)=> {this.remember=input}}/>\n                                    Remember Me\n                                </Label>\n                                \n                            </FormGroup> */}\n                            <FormGroup>\n                                <Button type='submit' color='primary' \n                                onClick={()=>props.handleLogin({username:username,password:password},props.login)}\n                                >Submit</Button>\n                            </FormGroup>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n    )\n}\nconst RegisterForm=(props)=>{\n    console.log(props.available)\n    const [password, setpassword] = useState('')\n    return(\n        <Modal isOpen={props.modal['register']} toggle={()=>props.toggleModal('register')}>\n            <ModalHeader>Register</ModalHeader>\n            <ModalBody>\n                <LocalForm onSubmit={(values)=>handleRegister({...values,password},props.register)}> \n                    <Row className='form-group'>\n                        <Col md={10}>\n                            <Label htmlFor='Username'>Username</Label>\n                            <Control.text model='.username' id='username' name='username'\n                                placeholder='Username' className='form-control'\n                                validators={{required,available:available(props.available)}}\n                                onChange={(e)=>{props.availableUName(e.target.value);console.log(e.target.value)}}\n                                required\n                            />\n                            <Errors\n                                className='text-danger'\n                                model='.username'\n                                show='touched'\n                                messages={{\n                                    required:'Required',\n                                    available:'Username already taken'\n                                }}/>\n                        </Col>\n                    </Row>\n                    <Row className='form-group'>\n                        <Col>\n                                <Label htmlFor='firstname'>Firstname</Label>\n                                <Control.text model='.firstname' id='firstname' name='firstname'\n                                    placeholder='firstname' className='form-control'\n                                    validators={{required}}/>\n                                <Errors model='.firstname'\n                                    show='touched'\n                                    className='text-danger'\n                                    messages={{\n                                        required:'Required',\n                                    }}\n                                />\n                        </Col>\n                    </Row>\n                    <Row className='form-group'>\n                        <Col>\n                            <Label htmlFor='lastname'>LastName</Label>\n                            <Control.text model='.lastname' id='lastname' name='lastname'\n                                className='form-control' placeholder='Last Name'\n                            />\n                        </Col>\n                    </Row>\n                    <Row className='form-group'>\n                        <Col>\n                            <Label htmlFor='password'>Password</Label>\n                            <Input type='password' name='password' id='password' onChange={(e)=>setpassword(e.target.value)} required/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button type=\"submit\" color=\"primary\">\n                                Register\n                            </Button>\n                        </Col>\n                    </Row>\n                </LocalForm>\n            </ModalBody>\n        </Modal>\n    )\n}\nconst handleRegister=(values,register)=>{\n    register(values)\n}\nconst LoginButton=(props)=>{\n    // console.log(props.logout.toString())\n    \n    // var cookie_login=cookie.load('login')\n    if (props.login==='false')\n    // if(cookie_login===undefined || cookie_login==='false')\n    {\n        return(\n            <Fragment>\n                <NavItem>\n                    <Button color='primary' onClick={()=>props.toggleModal('login')}>\n                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\n                    </Button>\n                </NavItem>\n                <NavItem>\n                    <Button color='primary' onClick={()=>props.toggleModal('register')}>\n                        <span className=\"fa fa-sign-up fa-lg\"></span>Register\n                    </Button>\n                </NavItem>\n            </Fragment>\n        )\n    }\n    else{\n        console.log(props.logout)\n        return(\n            <NavItem>\n                <Button color='primary' onClick={()=>props.handleLogout(props.logout)}>\n                    <span className=\"fa fa-sign-out fa-lg\"></span>Logout\n                </Button>\n            </NavItem>\n        )}\n}\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            modal:{\n                nav: false,\n                login:false,\n                register:false\n            }\n        };\n        this.toggleModal=this.toggleModal.bind(this)\n        this.handleLogin=this.handleLogin.bind(this)\n        this.handleLogout=this.handleLogout.bind(this)\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n      toggleModal(val){\n          var x=this.state.modal\n          x[val]=!x[val]\n          this.setState({\n              modal:x\n          })\n      }\n      handleLogin=(values,login)=>{\n          console.log(values)\n        login(values.username,values.password)\n        this.toggleModal('login')\n      }\n      handleLogout=(logout)=>{\n        console.log(logout)\n        logout()\n        // alert('Bye')\n    }\n    render() {\n        // this.props.availableUName('admin')\n        // alert(JSON.stringify(this.props.logout))\n        // console.log(document.cookie)\n        // console.log(this.props.logout)\n        // console.log(this)\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/bluegrassrestaurant/home\">\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Restaurant Blue Grass' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/bluegrassrestaurant/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/bluegrassrestaurant/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/bluegrassrestaurant/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/bluegrassrestaurant/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                            <Nav className='ml-auto' navbar>\n                                <LoginButton login={this.props.loginState.login} logout={this.props.logout} toggleModal={this.toggleModal} handleLogout={this.handleLogout}/>    \n                            </Nav>\n                        </Collapse>\n                    </div>\n                    <LoginForm modal={this.state.modal} toggleModal={this.toggleModal} login={this.props.login}  handleLogin={this.handleLogin}/>\n                    <RegisterForm modal={this.state.modal} toggleModal={this.toggleModal} register={this.props.register} availableUName={this.props.availableUName} available={this.props.loginState.available} />\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Restaurant Blue Grass</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                \n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                    <li><Link to='/bluegrassrestaurant/home'>Home</Link></li>\n                        <li><Link to='/bluegrassrestaurant/aboutus'>About Us</Link></li>\n                        <li><Link to='/bluegrassrestaurant/menu'>Menu</Link></li>\n                        <li><Link to='/bluegrassrestaurant/contactus'>Contact Us</Link></li>                        \n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n                    Old Jhajjar Road,Charkhi Dadri\n                      <br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:bluegrass@food.net\">bluegrass@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:bluegrass@food.net\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2020 Restaurant Blue Grass</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from '../components/Loading'\nimport { BaseUrl } from '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components'\nfunction RenderCard(props) {\n    var isLoading=props.isLoading,\n        item=props.item,\n        errMsg=props.errMsg;\n    if (isLoading)\n        return(\n            <Loading/>\n        )\n    else if (errMsg)\n        return(\n            <h4>{errMsg}</h4>\n        )\n    else {\n        return(\n            <FadeTransform in  \n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n            <Card>\n                <CardImg src={BaseUrl + item.image} alt={item.name} />\n\n                <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n        );}\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading} \n                        errMsg={props.dishErrMess}\n                    />\n                    {/* <p>{props.dish.name}</p> */}\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                        isLoading={props.leaderLoading}\n                        errMsg={props.leaderMsg}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component, Fragment } from 'react'\nimport {Card,CardBody,CardTitle,CardImg,CardText,Breadcrumb,BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Label, Col, Form} from 'reactstrap';\nimport { useState } from 'react';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom'\nimport { Loading } from './Loading';\nimport {BaseUrl} from '../shared/baseUrl'\n// import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {FadeTransform ,Fade,Stagger} from 'react-animation-components'\nconst required=(val)=>val && val.length\nconst minLength=(len)=>(val)=>val && val.length>=len\nconst maxLength=(len)=>(val)=>!val || val.length<=len\n\nconst handleCmtForm=(values,postComments,dishId)=>{\n    console.log(values)\n    console.log(postComments)\n    postComments(dishId,values.rating,values.author,values.comments)\n}\nfunction CommentForm({postComment,dishId}){\n    var [isCmtFormOpen,updateCmtFormOpen]=useState(false)\n    const toggleCmtFormOpen=()=>{updateCmtFormOpen(!isCmtFormOpen);}\n    return(\n        <div>\n            <Button outline onClick={toggleCmtFormOpen}>\n                <span className='fa fa-pencil fa-lg'></span>Add Comments\n            </Button>\n            <Modal isOpen={isCmtFormOpen} toggle={toggleCmtFormOpen}\n            >\n                <ModalHeader>Submit Comments</ModalHeader>\n                <ModalBody>\n                    <LocalForm onSubmit={(values)=>{handleCmtForm(values,postComment,dishId);toggleCmtFormOpen()}}>\n                        <Row className='form-group'>\n                            <Col>\n                                <Label htmlFor='rating'>Rating</Label>\n                                <Control.select model='.rating' id='rating' name='rating'\n                                    className='form- control'\n                                    validators={{\n                                        required\n                                    }} >                                    \n                                    <option>Rating</option>\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                                <Errors\n                                    className='text-danger'\n                                    model='.author'\n                                    show='touched'\n                                    messages={{\n                                        required:'Required'                                    \n                                    }}\n                                    />\n                            </Col>\n                        </Row>\n                        {/* <Row className='form-group'>\n                            <Label htmlFor=\"name\" md={4}>Your Name:</Label>\n                            <Col md={10}>\n                                <Control.text model='.author' id='name' name='name'\n                                    placeholder='Name'\n                                    validators={{\n                                        required,minLength:minLength(3),maxLength:maxLength(15)\n                                    }}\n                                    className='form-control'\n                                />\n                                <Errors\n                                className='text-danger'\n                                model='.author'\n                                show='touched'\n                                messages={{\n                                    required:'Required',\n                                    minLength:'Name should be 3 character long',\n                                    maxLength:'Name should be upto 15 characters'\n                                }}\n                                />\n                            </Col>\n                        </Row> */}\n                        <Row className='form-group'>\n                            <Label htmlFor='comments' md={4}>Comments</Label>\n                            <Col md={10}>\n                                <Control.textarea model='.comments' rows='6' id='comments' name='comments'\n                                placeholder='Comments' className='form-control' \n                                validators={{\n                                    required\n                                }} />\n                                <Errors\n                                className='text-danger'\n                                model='.comments'\n                                show='touched'\n                                messages={{\n                                    required:'Required'                                    \n                                }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Button type=\"submit\" color=\"primary\">\n                                    Send Comments\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\nfunction RenderComment({cmts,postComments,dishId,username,commentDelete,commentEdit}){\n\n    if(cmts){        \n        const comments=cmts.map((comment)=>{\n            var Rating=[]\n            for (var i=0;i<comment.rating;i++)\n                Rating.push(<i class=\"fa fa-star\" style={{'color':'yellow'}}/>)\n            for (i=comment.rating;i<5;i++)\n                Rating.push(<i class=\"fa fa-star\"/>)\n            const CmtsOptions=()=>{\n                const [editCmts,seteditCmts]=useState(false)\n                if(username && username===comment.author.username)\n                    return(\n                        <Fragment>\n                            <Button outline onClick={()=>commentDelete(comment._id,dishId)}>\n                                <i className='fa fa-trash'/>\n                            </Button>\n                            <Button outline onClick={()=>seteditCmts(!editCmts)}>\n                                <i className='fa fa-pencil'/>\n                            </Button>\n                            <Modal isOpen={editCmts} toggle={()=>seteditCmts(!editCmts)}>\n                                <ModalHeader>Edit Comment</ModalHeader>\n                                <ModalBody>\n                                    <LocalForm onSubmit={(values)=>commentEdit(comment._id,dishId,values)}>\n                                        <Row className='form-group'>\n                                            <Label htmlFor='comments' md={4}>Comments</Label>\n                                            <Col md={10}>\n                                                <Control.textarea model='.comment' rows='6' id='comment' name='comment'\n                                                placeholder='Comments' className='form-control' \n                                                validators={{\n                                                    required\n                                                }} />\n                                                <Errors\n                                                className='text-danger'\n                                                model='.comment'\n                                                show='touched'\n                                                messages={{\n                                                    required:'Required'                                    \n                                                }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Button type=\"submit\" color=\"primary\">\n                                                    Send Comments\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </LocalForm>\n                                </ModalBody>\n                            </Modal>\n                        </Fragment>\n                    )\n                else\n                    return (<Fragment></Fragment>)\n            }\n            return (                \n                <Fade in>\n                    <Row>\n                        <Col md={9}>\n                            <li key={comment.id}>\n                                {Rating.map(rating=>rating)}                        \n                                <p>{comment.comment}</p>\n                                <p>-- {comment.author.firstname} {comment.author.lastname},\n                                &nbsp;\n                                {new Intl.DateTimeFormat('en-US', {\n                                        year: 'numeric',\n                                        month: 'long',\n                                        day: '2-digit'\n                                    }).format(new Date(comment.date))}\n                                </p>\n                            </li>\n                        </Col>\n                        <Col>\n                            <CmtsOptions/>\n                        </Col>\n                    </Row>\n                </Fade>\n            )\n        })\n        return(\n            <div>\n                <Card>\n                    <CardBody>\n                        <h4>Comments</h4>\n                        <ul className='list-unstyled'>\n                            <Stagger in>\n                                {comments}\n                            </Stagger>    \n                        </ul>\n                    </CardBody>\n                    <CommentForm postComment={postComments} dishId={dishId}/>\n                </Card>\n            </div>\n        )\n    }\n}\nclass Dish extends Component{\n    // constructor(props){\n    //     super(props);\n    //     var dishId=window.location.href.split('/');\n    //     dishId=dishId[dishId.length-1]\n    //     // console.log(dishId)\n    //     props.fetchComments(dishId);\n    // }\n    \n    render(){\n        //dish is in props\n        var dish=this.props.dish;\n        // console.log(window.location)\n        if(this.props.dishLoading)\n            return(\n                <Loading/>\n            )\n        else if(this.props.disherrMsg)\n            return(\n                <h4>{this.props.disherrMsg}</h4>\n                // <div>Error</div>\n            )\n        else if(dish){\n            // console.log(this.props.comment)\n            // if(!this.props.comment)\n            console.log(this.props.dish.comments)\n            return(\n                <div className='container'>\n                    <div className='row'>\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                    </div>\n                    <div className='row'>\n                        <div className=\"col-12 col-md-5 m-1\"> \n                            <FadeTransform\n                                in\n                                transformProps={{\n                                    exitTransform: 'scale(0.5) translateY(-50%)'\n                                }}\n                            >\n                                <Card>\n                                <CardImg top src={BaseUrl + dish.image} alt={dish.name} />\n                                    <CardBody>                            \n                                        <CardTitle >{dish.name}</CardTitle>\n                                        <CardText>{dish.description}</CardText>\n                                    </CardBody>\n                                </Card>\n                            </FadeTransform>\n                        </div>\n                        <div className=\"col-12 col-md-5 m-1\"> \n                            <RenderComment cmts={this.props.dish.comments}\n                                postComments={this.props.postComment}  \n                                dishId={this.props.dish.id} \n                                username={this.props.username}\n                                commentDelete={this.props.commentDelete}\n                                commentEdit={this.props.commentEdit}\n                            />                        \n                        </div>\n                    </div>\n                    <h1>{this.props.dishLoading}</h1>\n                </div>\n            )\n        }\n        else{\n            return(<h1>Error occured</h1>)\n        }\n    }\n}\nexport default Dish;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './Loading';\nimport { BaseUrl } from '../shared/baseUrl';\nimport {Fade,Stagger} from 'react-animation-components'\nfunction RenderLeader({leader}){\n    return (\n        <Media>\n            <Media object src={BaseUrl+ leader.image} alt={leader.name}/>\n            <Media body className='col-12'>\n                <Media heading right>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n                <br/>\n            </Media>\n        </Media>\n    );\n}\nfunction About(props) {\n    if (props.leaders.isLoading)\n        return(<Loading/>)\n    else if(props.leaders.errMsg)\n        return(<h1>{props.leaders.errMsg}</h1>)\n    else\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"bluegrassrestaurant/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Restaurant Blue Grass quickly established itself as a culinary icon par excellence in India. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in India.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">                        \n                        <Media list>\n                            <Stagger in>\n                            {\n                                props.leaders.leaders.map((leader)=>(\n                                        <Fade in>\n                                        <RenderLeader leader={leader}/>\n                                        </Fade>\n                                    )\n                                )\n                            }\n                            </Stagger>\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default About;","//This file contains action used in project\n//action are js object which contain data that need to be changed.\n\n//Every action must contain 'type' and 'payload' key.\nimport * as ActionTypes from './ActionType'\nimport {BaseUrl} from '../shared/baseUrl'\nimport {fetch} from 'cross-fetch'\nimport cookie from 'react-cookies'\n\nexport const addDishes=(dishes)=>({\n    type:ActionTypes.ADD_DISHES,\n    payload:dishes\n})\n\nexport const dishesLoading=()=>({\n    type:ActionTypes.DISHES_LOADING\n})\nexport const dishesFailed=(errMsg)=>({\n    type:ActionTypes.DISHES_FAILED,\n    payload:errMsg\n})\nexport const refreshDish=(dish)=>({\n    type:ActionTypes.REFRESH_DISH,\n    payload:dish\n})\n\n//This is a redux thunk so it will return a function as action\n//This action will call dish loading action and after fetching will load dishes from server\nexport const fetchDishes=()=>(dispatch)=>{\n    dispatch(dishesLoading(true))\n    // console.log('Url:'+BaseUrl)\n    fetch(BaseUrl+'dishes')\n    .then((response)=>{\n        if(response.ok)\n            return response\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then((response)=>{\n        return response.json()\n    })\n    .then((response)=>{\n        // alert(JSON.stringify(response))\n        dispatch(addDishes(response))\n    })\n    .catch(error =>  { console.log('fetching dishes', error.message); });\n}\n\n//addComments is a action.\nexport const addComments=(comment)=>({\n    type:ActionTypes.ADD_COMMENT,\n    payload:comment\n})\nexport const fetchComments = (dishId) => (dispatch) => { \n    // alert(dishId)   \n    fetch(BaseUrl+'dishes/'+dishId+'/comments')\n    .then((response)=>{\n        // alert(JSON.stringify(response))\n        if(response.ok)\n            return response\n        else{\n            var err=new Error('Error '+response.status+': '+response.statusText)\n            err.response=response\n            throw err\n        }\n    }, error=>{\n        var errmess = new Error(error.message);\n        throw errmess;\n    }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComment(comments)))\n    .catch(error =>  { console.log('fetch comments', error.message);  });\n};\nexport const addComment = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(BaseUrl + 'dishes/'+dishId+'/comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        credentials: \"include\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(refreshDish(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\nexport const commentDelete=(commentId,dishId)=>(dispatch)=>{\n    fetch(BaseUrl+'dishes/'+dishId+'/comments/'+commentId,{\n        method:'delete',\n        credentials:'include',\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then(response=>\n        {\n            if(response.ok)\n                return response\n            else{\n                var err=new Error('Error '+response.status+': '+response.statusText)\n                err.response=response\n                throw err\n            }\n        },\n        error=>{\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then(dish => dispatch(refreshDish(dish)))\n    .catch(error =>  { console.log('Delete Comment', error.message);  });\n}\n\nexport const commentEdit=(commentId,dishId,comment)=>(dispatch)=>{\n    fetch(BaseUrl+'dishes/'+dishId+'/comments/'+commentId,{\n        method:'put',\n        credentials:'include',\n        body:JSON.stringify(comment),\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then(response=>\n        {\n            if(response.ok)\n                return response\n            else{\n                var err=new Error('Error '+response.status+': '+response.statusText)\n                err.response=response\n                throw err\n            }\n        },\n        error=>{\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then(dish => {\n        alert('Comment Changed');\n        dispatch(refreshDish(dish))\n    })\n    .catch(error =>  { console.log('Edit Comment Error', error.message);  });\n}\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(BaseUrl + 'promotions')\n    .then((response)=>{\n        if(response.ok)\n            return response\n        else{\n            var err=new Error('Error '+response.status+': '+response.statusText)\n            err.response=response\n            throw err\n        }\n    },\n    error=>{\n        var errmess = new Error(error.message);\n        throw errmess;\n    }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error =>  { console.log('fetch promos', error.message);  });\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const addLeader=(leaders)=>({\n    type:ActionTypes.ADD_LEADERS,\n    payload:leaders\n})\n\nexport const leaderLoading=()=>({\n    type:ActionTypes.LEADER_LOADING\n})\nexport const leaderFailed=(err)=>({\n    type:ActionTypes.LEADER_FAILED,\n    payload:err\n})\n\nexport const fetchleader=()=>(dispatch)=>{\n    dispatch(leaderLoading())\n\n    fetch(BaseUrl+'leaders')\n    .then((response)=>{\n        if (response.ok)\n            return response\n        else{\n            var err=new Error('Error '+response.status+':'+response.statusText)\n            err.response=response.statusText\n            throw err\n        }\n    },\n    err=>{\n        throw err\n    })\n    .then((response)=>response.json())\n    .then((leader)=>{\n        dispatch(addLeader(leader))\n    })\n    .catch(error =>  { console.log('post comments', error.message);  });\n}\n\nexport const postFeedback=(values)=>(dispatch)=>{\n    fetch(BaseUrl+'feedback',{\n        method:'post',\n        credentials:'include',\n        body:JSON.stringify(values),\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then((response)=>{\n        if (response.ok)\n            return response\n        else{var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n    .then((response)=>response.json())\n    .then((response)=>alert('Your feedback is send.'))\n    .catch(error=>\n        {\n             console.log('post feedback', error.message); \n             alert('Your feedback could not be posted\\nError: '+error.message);\n         })\n}\nexport const login=(username,password)=>(dispatch)=>{\n    var values={username:username,password:password}\n    fetch(BaseUrl+'users/login',{\n        method:'POST',\n        credentials:'include',\n        body:JSON.stringify(values),\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then(response => {\n        console.log(response)\n        if (response.ok) {\n          return response;\n        } else {\n            if(response.status===401)\n                response.statusText='Invalid username or password'\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.message = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response =>  {\n        // console.log(response.success)\n        alert(response.status)  \n        cookie.remove('login',{path:'/'})\n        cookie.save('login',true,{path:'/'})\n        cookie.save('user',username,{path:'/'})\n        if(response.success){\n            // alert('sdg')\n            dispatch(loginsuccess)\n        }\n        else\n            dispatch(loginfailed)\n    })\n    .catch(error =>  { console.log('Login error', error.message); alert('Login Failed\\nError: '+(error.message.statusText)); });\n}\nexport const loginsuccess={\n    type:ActionTypes.LOGIN\n}\nexport const loginfailed={\n    type:ActionTypes.LOGIN\n}\nexport const logout=()=>(dispatch)=>{\n    fetch(BaseUrl+'users/logout',{\n        method:'post',\n        credentials:'include',\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then((response)=>{\n        if(response.ok)\n            return response\n        else{\n            alert(JSON.stringify(response))\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    })\n    .then(response=>response.json())\n    .then((response)=>{\n        cookie.remove('login',{path:'/'})\n        cookie.save('login',false,{path:'/'})\n        cookie.remove('user',{path:'/'})\n        alert(response.status)\n        dispatch(loginfailed)\n    })\n    .catch(error =>  { console.log('Logout error', error.message); alert('Logout Failed\\nError: '+(error.message.statusText)); });\n}\nexport const register=(user)=>(dispatch)=>{\n    fetch(BaseUrl+'users/signup',{\n        method:'post',\n        credentials:'include',\n        body:JSON.stringify(user),\n        headers:{\n            'content-type':'application/json'\n        }\n    })\n    .then((response)=>{\n        if(response.ok)\n            return response\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    })\n    .then(response=>response.json())\n    .then(response=>{\n        alert(response.status)\n    })\n    .catch(error =>  { console.log('Registration error', error.message); alert('Registration Failed\\nError: '+(error.message.statusText)); });\n}\nexport const availableUName=(username)=>(dispatch)=>{\n    fetch(BaseUrl+'users/availableUName',{\n        method:'post',\n        body:JSON.stringify({username:username}),\n        headers:{\n            'content-type':'application/json'\n        },\n        credentials:'include'\n    })\n    .then(response=>{\n        // console.log(response)\n        if(response.ok)\n            return response\n        else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    })\n    .then(response=>response.json())\n    .then(response=>{\n        console.log(response)\n        dispatch(usernameAvailable(response.available))\n    } )\n    .catch(error =>  { console.log('Registration error', error.message); alert('Registration Failed\\nError: '+(error.message.statusText)); });\n}\nexport const usernameAvailable=(ava)=>({\n    type:ActionTypes.AVAILABLEUSERNAME,\n    payload:ava\n})","export const ADD_COMMENTS='ADD_COMMENTS'\nexport const DISHES_LOADING='DISHES_LOADING'\nexport const DISHES_FAILED='DISHES_FAILED'\nexport const ADD_DISHES='ADD_DISHES'\nexport const REFRESH_DISH='REFRESH_DISH'\n\nexport const ADD_PROMOS='ADD_PROMOTIONS'\nexport const PROMOS_LOADING='PROMO_LOADING'\nexport const PROMOS_FAILED='PROMO_FAILED'\n\nexport const ADD_LEADERS='ADD_LEADERS'\nexport const LEADER_LOADING='LEADER_LOADING'\nexport const LEADER_FAILED='LEADER_FAILED'\n\nexport const ADD_COMMENT='ADD_COMMENT'\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'\nexport const EDIT_COMMENT='EDIT_COMMENT'\nexport const DELETE_COMMENT='DELETE_COMMENT'\n\nexport const LOGIN='LOGIN'\nexport const LOGOUT='LOGOUT'\nexport const REGISTER='REGISTER'\nexport const AVAILABLEUSERNAME='AVAILABLEUSERNAME'","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport Header from './HeaderComponent'\nimport Footer from './FooterComponent'\nimport {Route,Switch,Redirect,withRouter} from 'react-router-dom'\nimport Home from './HomeComponent'\nimport Dish from './DishdetailComponent'\nimport About from './AboutComponent'\nimport { connect } from 'react-redux';\nimport { addComments, fetchDishes, fetchComments, fetchPromos, postComment,fetchleader, postFeedback, login, logout, register, availableUName, commentDelete, commentEdit } from '../redux/ActionCreater';//addComments is an action\nimport {actions} from 'react-redux-form'\nimport{TransitionGroup,CSSTransition} from 'react-transition-group'\nconst mapDispatchToProps=(dispatch)=>({\n  addComment: (dishId, rating, author, comment) => dispatch(addComments(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: (dishId) => dispatch(fetchComments(dishId)),\n  fetchPromos: () => dispatch(fetchPromos()),\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment,dishId)),\n  fetchLeaders:()=>dispatch(fetchleader()),\n  postfeedback:(values)=>dispatch(postFeedback(values)),\n  login:(username,password)=>dispatch(login(username,password)),\n  logout:()=>dispatch(logout()),\n  register:(user)=>dispatch(register(user)),\n  availableUName:(username)=>dispatch(availableUName(username)),\n  commentDelete:(commentId,dishId)=>dispatch(commentDelete(commentId,dishId)),\n  commentEdit:(commentId,dishId,comment)=>dispatch(commentEdit(commentId,dishId,comment))\n})\nconst mapStateToProps=(state)=>{\n  return {\n    dishes:state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders,\n    loginState:state.loginState\n  }\n}\nclass Main extends Component {\n  //will called every time after this component is re rendered\n  componentDidMount(){\n    this.props.fetchDishes();\n    // this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders()\n  }\n  onDishSelect(dishId) {\n    this.setState({ selectedDish: dishId});\n  }\n  render() {\n    // console.log(this.props.availableUName('admin'))\n    // console.log(this.props.login)\n    const HomePage=()=>{\n      return(\n        <Home\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n        dishesLoading={this.props.dishes.isLoading}\n        dishErrMess={this.props.dishes.errMess}\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n        promoLoading={this.props.promotions.isLoading}\n        promoErrMess={this.props.promotions.errMess}\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n        leaderLoading={this.props.leaders.isLoading}\n        leaderMsg={this.props.leaders.errMsg}\n        />\n      )\n    }\n    const DishWithId=({match})=>{\n      // alert(this.props.dishes.dishes.filter((dish)=>dish.id===parseInt(match.params.dishId,10))[0])\n      return(\n        <Dish dish={this.props.dishes.dishes.filter((dish) => dish.id === match.params.dishId)[0]}\n        dishLoading={this.props.dishes.isLoading}\n        disherrMess={this.props.dishes.errMess}\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n        commentsErrMess={this.props.comments.errMess}\n        addComment={this.props.addComment}\n        postComment={this.props.postComment}\n        fetchComments={this.props.fetchComments}\n        username={this.props.loginState.username}\n        commentDelete={this.props.commentDelete}\n        commentEdit={this.props.commentEdit}        \n        />\n      )\n    }\n    // console.log(this.props.logout.toString())\n    return (\n      <div>\n        <Header login={this.props.login} loginState={this.props.loginState} logout={this.props.logout} register={this.props.register} availableUName={this.props.availableUName}/>\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\n            <Switch location={this.props.location}>\n                  <Route path='/home' component={HomePage} />\n                  <Route exact path='/bluegrassrestaurant/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path='/bluegrassrestaurant/menu/:dishId' component={DishWithId}/>\n                  <Route exact path='/bluegrassrestaurant/contactus' component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postfeedback={this.props.postfeedback}/>}/>\n                  <Route exact path='/bluegrassrestaurant/aboutus' component={()=><About leaders={this.props.leaders}/>}/>\n                  <Redirect to=\"/home\"/>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        <Footer/>\n      </div>\n    );\n  }\n}\n//sends states and dispatch as props to Main and its child\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","//This file contains seprate reducer for dishes\n//reducer is a function which takes action and state and return a new modified state\nimport * as ActionType from './ActionType'\nexport const Dishes=(state={\n        isLoading:true,\n        dishes:[],\n        errMsg:null\n    },action)=>{\n    switch(action.type){\n        case ActionType.ADD_DISHES:\n            return {isLoading:false,dishes:action.payload,errMsg:null}\n        case ActionType.DISHES_FAILED:\n            return {...state,isLoading:false,errMsg:action.payload}\n        case ActionType.DISHES_LOADING:\n            return {...state,isLoading:true,dishes:[],errMsg:null}\n        case ActionType.REFRESH_DISH:\n            var dish=state.dishes.map((dish)=>{\n                if (dish.id===action.payload.id)\n                    return action.payload\n                else\n                    return dish\n            })\n            // console.log()\n            return{...state,dishes:dish}\n            // return state\n        default:\n            return state\n    }\n}","//This file contains seprate reducer function for Leaders\nimport * as ActionTypes from './ActionType'\n\n\nexport const Leaders=(state={isLoading:true,leaders:[],errMsg:null},action)=>{\n    switch(action.type){\n        case ActionTypes.LEADER_LOADING:\n            return {...state,isLoading:true,errMsg:null}\n        case ActionTypes.ADD_LEADERS:\n            return {...state,isLoading:false,errMsg:null,leaders:action.payload}\n        case ActionTypes.LEADER_FAILED:\n            return {...state,isLoading:false,errMsg:action.payload}\n        default:\n            return state\n    }\n}","//This file contains seprate reducer for promotions\nimport * as ActionTypes from './ActionType';\n\nexport const Promotions = (state  = { isLoading: true,errMess: null,promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","//This file contains seperate reducers for comments\nimport * as ActionType from './ActionType'\n\nexport const Comments=(state={ errMess: null, comments:[]},action)=>{\n    switch(action.type){\n        case ActionType.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n        \n        case ActionType.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n        \n        case ActionType.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment)};\n        default:\n            return state\n    }\n}","export const feedback={\n    firstname:'',\n    lastname:'',\n    email:'',\n    telnum:'',\n    agree:false,\n    message:'',\n    contactType:'Tel.'\n}","import * as ActionTypes from './ActionType'\nimport cookie from 'react-cookies'\nexport const Login=(state={login:cookie.load('login')||'false',available:false,username:cookie.load('user')},action)=>{\n    switch(action.type){\n        case ActionTypes.LOGIN:\n            return({...state,login:cookie.load('login')||'false',username:cookie.load('user')})\n        case ActionTypes.AVAILABLEUSERNAME:\n            return({...state,available:action.payload})\n        default:\n            return state\n    }\n}","import React,{Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport {ConfigStore} from './redux/ConfigureStore'\n\nconst store=ConfigStore()\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter> \n      </Provider> \n    );\n  }\n}\n\nexport default App;\n","import {} from 'react-redux'\nimport { createStore, combineReducers ,applyMiddleware} from 'redux'\nimport {Dishes} from './Dishes'\nimport {Leaders} from './Leaders'\nimport {Promotions} from './Promotions'\nimport {Comments} from './Comments'\nimport {feedback} from './form'\n\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport { createForms } from 'react-redux-form'\nimport { Login } from './Login'\n\nexport const ConfigStore=()=>{\n    const store=createStore(combineReducers({\n        //Dishes,Leaders,Promotions,Comments are seperate reducers for each.\n        dishes:Dishes,\n        leaders:Leaders,\n        promotions:Promotions,\n        comments:Comments,\n        loginState:Login,\n        ...createForms({\n            feedback:feedback\n        })\n    }),applyMiddleware(thunk,logger))\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//Importing bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Importing local css file import after bootstrap to override css properties\nimport 'bootstrap-social/bootstrap-social.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}